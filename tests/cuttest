#!/bin/bash


function getMeasures {
	width=`identify -format "%w" $1`
	height=`identify -format "%h" $1`
}

function genLine {
	intercept=`shuf -i 0-$width -n 1`
	sign=$(python2 ./sign.py)
	tanalpha=$sign$(printf "0.%03d%02d" $(( $RANDOM % 1000 )) $(( $RANDOM % 100)))
}

function initFuncs {
	gcc -o createBlankImg ../lib/manppm.c ../lib/fillwithblack.c createBlankImage.c -lm 2> /dev/null
}

function createVoidImage {
	./createBlankImg -n "voidImage.ppm"
}

function cleanVoidImage {
	 rm voidImage.ppm 
}

function testVoidImage {
	if [[ `../split -p -f voidImage.ppm|egrep -q "No green points are detected!"` -eq 0 
	&& `../split -s -f voidImage.ppm|egrep -q "No green points are detected!"` -eq 0 ]]; then
		echo "[Void Image] OK!"
	else
		echo "[Void Image] FAILED!"
	fi
}

function testRandomPoints {
	genLine $width
	halfheight=$(( $height/2  ))
	y1=`shuf -i 0-$halfheight -n 1`
	y2=`shuf -i $halfheight-$height -n 1`
	x1=`echo "$intercept+$tanalpha*$y1"|bc`
	x2=`echo "$intercept+$tanalpha*$y2"|bc`
	./createBlankImg -n "blankImage.ppm" -x $x1 -y $y1 -a $x2 -b $y2
	../split -f "blankImage.ppm" -p -s
}

#getMeasures $1
#genLine `echo $imgW`

#echo $intercept
#echo $tanalpha

# Init stuff #

initFuncs

# Void Image test #

createVoidImage
testVoidImage
cleanVoidImage

# Test split with random points #

width=400
height=600
testRandomPoints
#echo $x1
#echo $y1
#echo $x2
#echo $y2
echo "intercept: "$intercept
echo "tanalpha: "$tanalpha
rm blankImage.ppm

# Clean All #

rm ../lib/fillwithblack.o ../lib/manppm.o
rm ./createBlankImg

###################


